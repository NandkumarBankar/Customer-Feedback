pipeline {
    agent any

    environment {
        NODE_HOME = 'C:\\Program Files\\nodejs'  // Specify the path to Node.js on Windows
        NPM_CACHE = "%USERPROFILE%\\.npm"         // NPM cache location, modify as needed
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/NandkumarBankar/Customer-Feedback.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    echo 'Installing Node.js and Angular dependencies...'

                    // Install Node.js and Angular CLI on Windows
                    // Install Node.js (If it's not installed globally, we can use nvm or a manual install script)
                    bat 'curl -sL https://deb.nodesource.com/setup_14.x | bash -' // Not needed on Windows, remove this line if on Windows
                    bat 'npm install -g @angular/cli' // Install Angular CLI globally
                    bat 'npm install'  // Install project dependencies from package.json
                }
            }
        }

        stage('Serve Angular Project') {
            steps {
                script {
                    echo 'Starting Angular project using ng serve...'

                    // Start Angular app in the background on Windows
                    // The "start" command runs the app in a separate command window, without blocking Jenkins.
                    bat 'start cmd /c "ng serve --host 0.0.0.0 --port 4200"'
                }
            }
        }

        stage('Test the Application') {
            steps {
                script {
                    echo 'Running tests on the Angular application...'

                    // Optionally run tests, using Angular CLI's test command
                    bat 'ng test --watch=false'
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up after execution"
        }
        success {
            echo "Build and deployment successful!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
