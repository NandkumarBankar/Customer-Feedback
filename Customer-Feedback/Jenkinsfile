pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/NandkumarBankar/Customer-Feedback.git'
            }
        }

        stage('Build : Customer-Feedback ') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn clean package'
                }
            }
        }

        stage('Test Project : Customer-Feedback') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn test'
                }
            }
        }

              stage('Deploy Project : Customer-Feedback') {
                    steps {
                        dir('Customer-Feedback') {
                            script {
                                // Read the port number from application.yml or set a default value
                                def port = readFile('src/main/resources/application.yml')
                                    .find(/server.port: (\d+)/) { match, p -> return p } ?: '8081'

                                echo "Using port: ${port}"

                                // Check if the port is already in use
                                def portInUse = bat(script: "netstat -ano | findstr :${port}", returnStdout: true).trim()

                                if (portInUse) {
                                    echo "Port ${port} is already in use. Terminating the existing process."
                                    // Extract PID of the process using the port
                                    def pid = bat(script: "netstat -ano | findstr :${port} | for /f \"tokens=5\" %%i in (\"%%i\") do echo %%i", returnStdout: true).trim()
                                    // Kill the existing process
                                    bat "taskkill /F /PID ${pid}"
                                }
                            }

                            // Run the new JAR file in the background
                            bat 'java -jar target/Customer-Feedback.jar'
                        }
                    }
                }
            }

    post {
        always {
            echo "Cleaning up after execution"
        }
        success {
            echo "Build and deployment successful!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
