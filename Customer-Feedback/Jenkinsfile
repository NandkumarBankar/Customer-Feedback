pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/NandkumarBankar/Customer-Feedback.git'
            }
        }

        stage('Build : Customer-Feedback ') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn clean package'
                }
            }
        }

        stage('Test Project : Customer-Feedback') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn test'
                }
            }
        }

              stage('Deploy Project : Customer-Feedback') {
                          steps {
                                       dir('Customer-Feedback') {
                                           script {
                                               // Read the port number from application.yml or set a default value
                                               def port = readFile('src/main/resources/application.yml')
                                                   .find(/server.port: (\d+)/) { match, p -> return p } ?: '8081'

                                               echo "Using port: ${port}"

                                               // Check if the port is already in use
                                               def portInUse = bat(script: "netstat -ano | findstr :${port}", returnStdout: true).trim()

                                               echo "Netstat Output: ${portInUse}"

                                               if (portInUse) {
                                                   echo "Port ${port} is already in use. Terminating the existing process."

                                                   // Extract PID from netstat output using a more reliable method

                                                   for /f "tokens=5" %%a in ('netstat -ano ^| findstr :'${port}) do (
                                                       set pid=%%a
                                                   )
                                                   
                                                   echo "Found PID: ${pid}"

                                                                 // Kill the existing process if PID is found
                                                                 if (pid) {
                                                                     bat "taskkill /F /PID ${pid}"
                                                                 } else {
                                                                     echo "No valid PID found for port ${port}."
                                                                 }
                                               }
                                           }

                                           // Run the new JAR file in the background
                                           bat 'java -jar target/Customer-Feedback.jar'
                                       }
                                   }
                               }
                           }

    post {
        always {
            echo "Cleaning up after execution"
        }
        success {
            echo "Build and deployment successful!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
