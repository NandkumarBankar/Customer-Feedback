pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/NandkumarBankar/Customer-Feedback.git'
            }
        }

        stage('Build : Customer-Feedback ') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn clean package'
                }
            }
        }

        stage('Test Project : Customer-Feedback') {
            steps {
                dir('Customer-Feedback') {
                    bat 'mvn test'
                }
            }
        }

 stage('Check and Terminate Process') {
     steps {
         script {
             // Read the port number from application.yml or use default 8081
             def port = readFile('Customer-Feedback/src/main/resources/application.yml')
                 .find(/server\.port: (\d+)/) { match, p -> return p } ?: '8081'

             echo "Using port: ${port}"

             // Running netstat to find the PID for the port and terminate it
             def pid = bat(script: """
                 @echo off
                 for /f "tokens=5" %%a in ('netstat -ano ^| findstr :${port}') do (
                     echo %%a
                     set pid=%%a
                     goto :found
                 )
                 :found
                 echo !pid!
             """, returnStdout: true).trim()

             // Fix delayed variable expansion for Windows batch commands
             pid = pid.tokenize("\n").last().trim()
             echo "Found PID: ${pid}"

             // If a PID is found, terminate the process
             if (pid.isInteger()) {
                 echo "Terminating process with PID: ${pid}"
                 bat "taskkill /F /PID ${pid}"
             } else {
                 echo "No process found using port ${port}."
             }
         }
     }
 }



        stage('Deploy Project : Customer-Feedback') {
            steps {
                dir('Customer-Feedback') {
                    // Run the new JAR file in the background
                    bat 'java -jar target/Customer-Feedback.jar'
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up after execution"
        }
        success {
            echo "Build and deployment successful!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
